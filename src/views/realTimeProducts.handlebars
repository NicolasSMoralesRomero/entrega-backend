<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productos en Tiempo Real</title>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        let currentPage = 1;
        const limit = 10;
        let selectedCategory = '';

        document.addEventListener('DOMContentLoaded', () => {
            const socket = io();
            const categorySelect = document.getElementById('categorySelect');
            const prevButton = document.getElementById('prevButton');
            const nextButton = document.getElementById('nextButton');

            loadProducts();

            function loadProducts() {
                socket.emit('getProducts', { page: currentPage, limit, category: selectedCategory });
            }

            socket.on('updateProducts', ({ products, hasPrevPage, hasNextPage }) => {
                const productList = document.getElementById('productList');
                productList.innerHTML = products.map(product =>
                    `<li>${product.title || 'Sin nombre'} - ${product.price} <button onclick="addToCart('${product._id}')">Agregar al carrito</button></li>`
                ).join('');

                prevButton.disabled = !hasPrevPage;
                nextButton.disabled = !hasNextPage;
            });

            categorySelect.addEventListener('change', () => {
                selectedCategory = categorySelect.value;
                currentPage = 1; // Reset page to 1 on category change
                loadProducts();
            });

            document.getElementById('productForm').addEventListener('submit', (event) => {
                event.preventDefault();

                const title = event.target.title.value;
                const description = event.target.description.value;
                const price = event.target.price.value;
                const stock = event.target.stock.value;
                const category = event.target.category.value;

                socket.emit('addProduct', { title, description, price, stock, category });
                event.target.reset();
            });

            prevButton.addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    loadProducts();
                }
            });

            nextButton.addEventListener('click', () => {
                currentPage++;
                loadProducts();
            });
        });

        function addToCart(productId) {
            fetch(`/api/carts/670457eadbee7b2e09aacd6f/product/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ quantity: 1 })
            })
            .then(response => {
                if (response.ok) {
                    return response.json(); // Procesar la respuesta
                } else {
                    throw new Error('Error al agregar el producto al carrito');
                }
            })
            .then(data => {
                alert('Producto agregado al carrito');
                console.log('Carrito actualizado:', data); // Mostrar el contenido actualizado del carrito
            })
            .catch(error => {
                console.error('Error:', error);
                alert(error.message);
            });
        }
    </script>
</head>
<body>
    <h1>Productos en Tiempo Real</h1>
    
    <h2>¡Crea tus productos!</h2>
    <form id="productForm">
        <input type="text" name="title" placeholder="Título" required>
        <textarea name="description" placeholder="Descripción" required></textarea>
        <input type="number" name="price" placeholder="Precio" required>
        <input type="number" name="stock" placeholder="Stock" required min="0">
        <input type="text" name="category" placeholder="Categoría" required>
        <button type="submit">Agregar producto</button>
    </form>

    <label for="categorySelect">Filtrar por categoría:</label>
    <select id="categorySelect">
        <option value="">Todas</option>
        <option value="Tecnologia">Tecnología</option>
        <option value="Relojes">Relojes</option>
        <option value="Ropa">Ropa</option>
        <option value="Hogar">Hogar</option>
    </select>

    <ul id="productList"></ul>

    <button id="prevButton" disabled>Página Anterior</button>
    <button id="nextButton" disabled>Página Siguiente</button>
</body>
</html>




